version: 2.1

parameters:
  tf_dir:
    type: string
    default: "infra"

workflows:
  version: 2
  deploy:
    jobs:
      - build_package
      - tf_validate:
          requires: [build_package]
          context: [aws-deploy]
      - tf_plan:
          requires: [tf_validate]
          context: [aws-deploy]
      - hold_for_approval:
          type: approval
          requires: [tf_plan]
          filters: { branches: { only: main } }
      - tf_apply:
          requires: [hold_for_approval]
          context: [aws-deploy]

jobs:
  build_package:
    docker: [ { image: cimg/node:22.21 } ]
    working_directory: ~/project
    steps:
      - checkout
      - run: npm ci
      - run: node build.mjs
      - run: zip -j lambda.zip dist/index.cjs
      - persist_to_workspace:
          root: .
          paths: [ lambda.zip ]

  tf_validate:
    docker: [ { image: hashicorp/terraform:1.13.0 } ]
    working_directory: ~/project
    environment: { TF_IN_AUTOMATION: "true", TF_INPUT: "false" }
    steps:
      - checkout
      - run: |
          cd "<< pipeline.parameters.tf_dir >>"
          terraform init -input=false
          terraform fmt -check
          terraform validate

  tf_plan:
    docker: [ { image: hashicorp/terraform:1.13.0 } ]
    working_directory: ~/project
    environment: { TF_IN_AUTOMATION: "true", TF_INPUT: "false" }
    steps:
      - checkout
      - attach_workspace: { at: /tmp/workspace }
      - run: |
          [ -f /tmp/workspace/lambda.zip ] && mv /tmp/workspace/lambda.zip . || true
          cd "<< pipeline.parameters.tf_dir >>"
          terraform init -input=false
          terraform plan -input=false -out tfplan
          terraform show -no-color tfplan > plan.txt
      - store_artifacts: { path: << pipeline.parameters.tf_dir >>/plan.txt }
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.tf_dir >>/tfplan
            - << pipeline.parameters.tf_dir >>/.terraform
            - << pipeline.parameters.tf_dir >>/.terraform.lock.hcl

  tf_apply:
    docker: [ { image: hashicorp/terraform:1.13.0 } ]
    working_directory: ~/project
    environment: { TF_IN_AUTOMATION: "true", TF_INPUT: "false" }
    steps:
      - checkout
      - attach_workspace: { at: ~/project }
      - run: |
          cd "<< pipeline.parameters.tf_dir >>"
          terraform init -input=false
          terraform apply -auto-approve tfplan