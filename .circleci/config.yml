version: 2.1

orbs:
  node: circleci/node@7.2.1

parameters:
  tf_dir:
    type: string
    default: "infra"

jobs:
  build_package:
    docker:
      - image: cimg/node:22.21
    working_directory: ~/project
    steps:
      - checkout
      - run: npm ci
      - run: node build.mjs
      - run: zip -j lambda.zip dist/index.cjs
      - persist_to_workspace:
          root: .
          paths:
            - lambda.zip

  terraform_plan:
    docker:
      - image: hashicorp/terraform:1.13
    working_directory: ~/project
    environment:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - run: |
          ls -la /tmp/workspace || true
          [ -f /tmp/workspace/lambda.zip ] && mv /tmp/workspace/lambda.zip ./ || echo "lambda.zip not found in workspace"
          echo "Repo root:" && ls -la
          echo "TF dir:" && ls -la "<< pipeline.parameters.tf_dir >>"

      - run:
          name: Terraform Init
          command: |
            cd "<< pipeline.parameters.tf_dir >>" && terraform init -input=false

      - run:
          name: Terraform Validate
          command: |
            cd "<< pipeline.parameters.tf_dir >>" && terraform fmt -check
            cd "<< pipeline.parameters.tf_dir >>" && terraform validate

      - run:
          name: Terraform Plan
          command: |
            cd "<< pipeline.parameters.tf_dir >>" && terraform plan -input=false -out tfplan
            cd "<< pipeline.parameters.tf_dir >>" && terraform show -no-color tfplan > plan.txt
            head -n 200 "<< pipeline.parameters.tf_dir >>/plan.txt"

      - store_artifacts:
          path: << pipeline.parameters.tf_dir >>/plan.txt
          destination: plan.txt
      - store_artifacts:
          path: << pipeline.parameters.tf_dir >>/tfplan
          destination: tfplan
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.tf_dir >>/tfplan
            - << pipeline.parameters.tf_dir >>/.terraform
            - << pipeline.parameters.tf_dir >>/.terraform.lock.hcl
            - << pipeline.parameters.tf_dir >>/plan.txt

  # -------------------------------
  # 3) Terraform Apply
  # -------------------------------
  terraform_apply:
    docker:
      - image: hashicorp/terraform:1.13
    working_directory: ~/project
    environment:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          # plan aşamasından gelen tfplan ve .terraform dosyaları repo köküne geliyor (persist root: .)
          # bu yüzden bir şey taşımaya gerek yok; sadece kontrol edelim
          echo "Repo root:" && ls -la
          echo "Infra content:" && ls -la "<< pipeline.parameters.tf_dir >>"
      - run:
          name: Terraform Init
          command: |
            cd "<< pipeline.parameters.tf_dir >>" && terraform init -input=false
      - run:
          name: Terraform Apply
          command: |
            cd "<< pipeline.parameters.tf_dir >>" && terraform apply -auto-approve tfplan

workflows:
  version: 2
  plan_review_apply:
    jobs:
      - build_package:
          filters:
            branches:
              only:
                - main
                - /feature\/.*/
      - terraform_plan:
          requires:
            - build_package
          context: [aws-deploy]
      - hold_for_approval:
          type: approval
          requires:
            - terraform_plan
          filters:
            branches:
              only: main
      - terraform_apply:
          requires:
            - hold_for_approval
          context: [aws-deploy]